{"ast":null,"code":"import shortId from \"shortid\";\nimport produce from \"immer\";\nimport faker from \"faker\";\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"제로초\"\n    },\n    content: \"첫 번째 게시글 #해시태그 #익스프레스\",\n    Images: [{\n      id: shortId.generate(),\n      src: \"https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726\"\n    }, {\n      id: shortId.generate(),\n      src: \"https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg\"\n    }, {\n      id: shortId.generate(),\n      src: \"https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg\"\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: \"nero\"\n      },\n      content: \"우와 개정판이 나왔군요~\"\n    }, {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: \"hero\"\n      },\n      content: \"얼른 사고싶어요~\"\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\nconst dummyPost = data => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: \"제로초\"\n  },\n  Images: [],\n  Comments: []\n});\nconst dummyComment = data => ({\n  id: shortId.generate(),\n  User: {\n    id: shortId.generate(),\n    nickname: \"nero\"\n  },\n  content: data\n});\n\n// 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.mainPosts.unshift(dummyPost(action.data));\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(post => post.id !== action.data);\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS:\n        {\n          const post = draft.mainPosts.find(value => value.id === action.data.postId);\n          post.Comments.unshift(dummyComment(action.data.content));\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break;\n        }\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n      default:\n        break;\n    }\n  });\n};\nexport default reducer;","map":{"version":3,"names":["shortId","produce","faker","initialState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","draft","unshift","error","filter","post","find","value","postId"],"sources":["D:/source/infearn/node_bird/front/reducers/post.js"],"sourcesContent":["import shortId from \"shortid\";\nimport produce from \"immer\";\nimport faker from \"faker\";\n\nexport const initialState = {\n  mainPosts: [\n    {\n      id: 1,\n      User: { id: 1, nickname: \"제로초\" },\n      content: \"첫 번째 게시글 #해시태그 #익스프레스\",\n      Images: [\n        {\n          id: shortId.generate(),\n          src: \"https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726\",\n        },\n        {\n          id: shortId.generate(),\n          src: \"https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg\",\n        },\n        {\n          id: shortId.generate(),\n          src: \"https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg\",\n        },\n      ],\n      Comments: [\n        {\n          id: shortId.generate(),\n          User: {\n            id: shortId.generate(),\n            nickname: \"nero\",\n          },\n          content: \"우와 개정판이 나왔군요~\",\n        },\n        {\n          id: shortId.generate(),\n          User: {\n            id: shortId.generate(),\n            nickname: \"hero\",\n          },\n          content: \"얼른 사고싶어요~\",\n        },\n      ],\n    },\n  ],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n};\n\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\n\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\n\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\n\nexport const addPost = (data) => ({ type: ADD_POST_REQUEST, data });\n\nexport const addComment = (data) => ({ type: ADD_COMMENT_REQUEST, data });\n\nconst dummyPost = (data) => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: \"제로초\",\n  },\n  Images: [],\n  Comments: [],\n});\n\nconst dummyComment = (data) => ({\n  id: shortId.generate(),\n  User: {\n    id: shortId.generate(),\n    nickname: \"nero\",\n  },\n  content: data,\n});\n\n// 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.mainPosts.unshift(dummyPost(action.data));\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(\n          (post) => post.id !== action.data\n        );\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS: {\n        const post = draft.mainPosts.find(\n          (value) => value.id === action.data.postId\n        );\n        post.Comments.unshift(dummyComment(action.data.content));\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n      }\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}