{"ast":null,"code":"import { all, fork, put, delay, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from \"../reducers/user\";\nfunction followAPI(data) {\n  return axios.post(\"/api/follow\", data);\n}\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI, action.data); // call 은 동기, fork 는 비동기\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction unfollowAPI(data) {\n  return axios.delete(\"/api/follow\", data);\n}\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(followAPI, action.data); // call 은 동기, fork 는 비동기\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction logInAPI(data) {\n  return axios.post(\"/api/login\", data);\n}\nfunction* logIn(action) {\n  try {\n    console.log(\"saga login\");\n    // const result = yield call(logInAPI, action.data); // call 은 동기, fork 는 비동기\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction logOutAPI() {\n  return axios.post(\"/api/logout\");\n}\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI); // call 은 동기, fork 는 비동기\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction signUpAPI() {\n  return axios.post(\"/api/signup\");\n}\nfunction* signUp() {\n  try {\n    // const result = yield call(signUpAPI); // call 은 동기, fork 는 비동기\n    yield delay(1000);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\nexport default function* userSaga() {\n  yield all([fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"names":["all","fork","put","delay","takeLatest","axios","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","followAPI","data","post","follow","action","type","err","error","response","unfollowAPI","delete","unfollow","logInAPI","logIn","console","log","logOutAPI","logOut","signUpAPI","signUp","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","userSaga"],"sources":["D:/source/infearn/node_bird/front/sagas/user.js"],"sourcesContent":["import { all, fork, put, delay, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  FOLLOW_FAILURE,\n  FOLLOW_REQUEST,\n  FOLLOW_SUCCESS,\n  LOG_IN_FAILURE,\n  LOG_IN_REQUEST,\n  LOG_IN_SUCCESS,\n  LOG_OUT_FAILURE,\n  LOG_OUT_REQUEST,\n  LOG_OUT_SUCCESS,\n  SIGN_UP_FAILURE,\n  SIGN_UP_REQUEST,\n  SIGN_UP_SUCCESS,\n  UNFOLLOW_FAILURE,\n  UNFOLLOW_REQUEST,\n  UNFOLLOW_SUCCESS,\n} from \"../reducers/user\";\n\nfunction followAPI(data) {\n  return axios.post(\"/api/follow\", data);\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI, action.data); // call 은 동기, fork 는 비동기\n    yield delay(1000);\n    yield put({ type: FOLLOW_SUCCESS, data: action.data });\n  } catch (err) {\n    yield put({ type: FOLLOW_FAILURE, error: err.response.data });\n  }\n}\n\nfunction unfollowAPI(data) {\n  return axios.delete(\"/api/follow\", data);\n}\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(followAPI, action.data); // call 은 동기, fork 는 비동기\n    yield delay(1000);\n    yield put({ type: UNFOLLOW_SUCCESS, data: action.data });\n  } catch (err) {\n    yield put({ type: UNFOLLOW_FAILURE, error: err.response.data });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post(\"/api/login\", data);\n}\n\nfunction* logIn(action) {\n  try {\n    console.log(\"saga login\");\n    // const result = yield call(logInAPI, action.data); // call 은 동기, fork 는 비동기\n    yield delay(1000);\n    yield put({ type: LOG_IN_SUCCESS, data: action.data });\n  } catch (err) {\n    yield put({ type: LOG_IN_FAILURE, error: err.response.data });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI); // call 은 동기, fork 는 비동기\n    yield delay(1000);\n    yield put({ type: LOG_OUT_SUCCESS });\n  } catch (err) {\n    yield put({ type: LOG_OUT_FAILURE, error: err.response.data });\n  }\n}\n\nfunction signUpAPI() {\n  return axios.post(\"/api/signup\");\n}\n\nfunction* signUp() {\n  try {\n    // const result = yield call(signUpAPI); // call 은 동기, fork 는 비동기\n    yield delay(1000);\n    yield put({ type: SIGN_UP_SUCCESS });\n  } catch (err) {\n    yield put({ type: SIGN_UP_FAILURE, error: err.response.data });\n  }\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchFollow),\n    fork(watchUnfollow),\n    fork(watchLogIn),\n    fork(watchLogOut),\n    fork(watchSignUp),\n  ]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}