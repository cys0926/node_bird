{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport reducer from \"../reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunkMiddleware from \"redux-thunk\";\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  // if (typeof action === \"function\") {\n  //   return action(dispatch, getState);\n  // }\n  console.log(action);\n  return next(action);\n};\nconst configureStore = () => {\n  const middlewares = [thunkMiddleware, loggerMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  return store;\n};\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","applyMiddleware","compose","createStore","reducer","composeWithDevTools","thunkMiddleware","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","middlewares","enhancer","store","wrapper","debug"],"sources":["D:/source/infearn/node_bird/front/store/configureStore.js"],"sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport reducer from \"../reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunkMiddleware from \"redux-thunk\";\n\nconst loggerMiddleware =\n  ({ dispatch, getState }) =>\n  (next) =>\n  (action) => {\n    // if (typeof action === \"function\") {\n    //   return action(dispatch, getState);\n    // }\n    console.log(action);\n    return next(action);\n  };\n\nconst configureStore = () => {\n  const middlewares = [thunkMiddleware, loggerMiddleware];\n  const enhancer =\n    process.env.NODE_ENV === \"production\"\n      ? compose(applyMiddleware(...middlewares))\n      : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: process.env.NODE_ENV === \"development\",\n});\n\nexport default wrapper;\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,SAASC,eAAe,EAAEC,OAAO,EAAEC,WAAW,QAAQ,OAAO;AAC7D,OAAOC,OAAO,MAAM,aAAa;AACjC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,eAAe,MAAM,aAAa;AAEzC,MAAMC,gBAAgB,GACpB,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KACtBC,IAAI,IACJC,MAAM,IAAK;EACV;EACA;EACA;EACAC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,OAAOD,IAAI,CAACC,MAAM,CAAC;AACrB,CAAC;AAEH,MAAMG,cAAc,GAAG,MAAM;EAC3B,MAAMC,WAAW,GAAG,CAACT,eAAe,EAAEC,gBAAgB,CAAC;EACvD,MAAMS,QAAQ,GACZ,QACId,OAAO,CAACD,eAAe,CAAC,GAAGc,WAAW,CAAC,CAAC,GACxCV,mBAAmB,CAACJ,eAAe,CAAC,GAAGc,WAAW,CAAC,CAAC;EAC1D,MAAME,KAAK,GAAGd,WAAW,CAACC,OAAO,EAAEY,QAAQ,CAAC;EAC5C,OAAOC,KAAK;AACd,CAAC;AAED,MAAMC,OAAO,GAAGlB,aAAa,CAACc,cAAc,EAAE;EAC5CK,KAAK;AACP,CAAC,CAAC;AAEF,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}