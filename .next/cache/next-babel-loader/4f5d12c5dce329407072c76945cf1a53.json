{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport reducer from \"../reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../sagas\";\nvar loggerMiddleware = function loggerMiddleware(_ref) {\n  var dispatch = _ref.dispatch,\n    getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      // if (typeof action === \"function\") {\n      //   return action(dispatch, getState);\n      // }\n      console.log(action);\n      return next(action);\n    };\n  };\n};\nvar configureStore = function configureStore() {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware, loggerMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","applyMiddleware","compose","createStore","reducer","composeWithDevTools","createSagaMiddleware","rootSaga","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","sagaMiddleware","middlewares","enhancer","store","sagaTask","run","wrapper","debug"],"sources":["D:/source/infearn/node_bird/front/store/configureStore.js"],"sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport reducer from \"../reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../sagas\";\n\nconst loggerMiddleware =\n  ({ dispatch, getState }) =>\n  (next) =>\n  (action) => {\n    // if (typeof action === \"function\") {\n    //   return action(dispatch, getState);\n    // }\n    console.log(action);\n    return next(action);\n  };\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, loggerMiddleware];\n  const enhancer =\n    process.env.NODE_ENV === \"production\"\n      ? compose(applyMiddleware(...middlewares))\n      : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: process.env.NODE_ENV === \"development\",\n});\n\nexport default wrapper;\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,SAASC,eAAe,EAAEC,OAAO,EAAEC,WAAW,QAAQ,OAAO;AAC7D,OAAOC,OAAO,MAAM,aAAa;AACjC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,oBAAoB,MAAM,YAAY;AAC7C,OAAOC,QAAQ,MAAM,UAAU;AAE/B,IAAMC,gBAAgB,GACpB,SADIA,gBAAgB;EAAA,IACjBC,QAAQ,QAARA,QAAQ;IAAEC,QAAQ,QAARA,QAAQ;EAAA,OACrB,UAACC,IAAI;IAAA,OACL,UAACC,MAAM,EAAK;MACV;MACA;MACA;MACAC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACnB,OAAOD,IAAI,CAACC,MAAM,CAAC;IACrB,CAAC;EAAA;AAAA;AAEH,IAAMG,cAAc,GAAG,SAAjBA,cAAc,GAAS;EAC3B,IAAMC,cAAc,GAAGV,oBAAoB,EAAE;EAC7C,IAAMW,WAAW,GAAG,CAACD,cAAc,EAAER,gBAAgB,CAAC;EACtD,IAAMU,QAAQ,GACZ,QACIhB,OAAO,CAACD,eAAe,eAAIgB,WAAW,CAAC,CAAC,GACxCZ,mBAAmB,CAACJ,eAAe,eAAIgB,WAAW,CAAC,CAAC;EAC1D,IAAME,KAAK,GAAGhB,WAAW,CAACC,OAAO,EAAEc,QAAQ,CAAC;EAC5CC,KAAK,CAACC,QAAQ,GAAGJ,cAAc,CAACK,GAAG,CAACd,QAAQ,CAAC;EAC7C,OAAOY,KAAK;AACd,CAAC;AAED,IAAMG,OAAO,GAAGtB,aAAa,CAACe,cAAc,EAAE;EAC5CQ,KAAK;AACP,CAAC,CAAC;AAEF,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}