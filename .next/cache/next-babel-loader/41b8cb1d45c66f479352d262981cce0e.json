{"ast":null,"code":"var _jsxFileName = \"D:\\\\source\\\\infearn\\\\node_bird\\\\front\\\\components\\\\CommentForm.jsx\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport useInput from \"../hooks/useInput\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    addCommentDone\n  } = useSelector(state => state.post);\n  const [commentText, onChangeCommentText] = useInput(\"\");\n  const id = useSelector(state => {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const onSubmitComment = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  useEffect(() => {\n    if (addCommentDone) {\n      set;\n    }\n  }, [addCommentDone]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: \"relative\",\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    rows: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    style: {\n      position: \"absolute\",\n      right: 0,\n      bottom: -40\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"\\uC090\\uC57D\")));\n};\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"names":["React","useCallback","useEffect","Button","Form","Input","useInput","PropTypes","useDispatch","useSelector","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","addCommentDone","state","commentText","onChangeCommentText","id","user","me","onSubmitComment","type","data","content","postId","userId","set","position","margin","right","bottom","propTypes","object","isRequired"],"sources":["D:/source/infearn/node_bird/front/components/CommentForm.jsx"],"sourcesContent":["import React, { useCallback, useEffect } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport useInput from \"../hooks/useInput\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\n\nconst CommentForm = ({ post }) => {\n  const dispatch = useDispatch();\n  const { addCommentDone } = useSelector((state) => state.post);\n  const [commentText, onChangeCommentText] = useInput(\"\");\n  const id = useSelector((state) => state.user.me?.id);\n\n  const onSubmitComment = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: { content: commentText, postId: post.id, userId: id },\n    });\n  }, [commentText, id]);\n\n  useEffect(() => {\n    if(addCommentDone){\n      set\n    }\n\n  }, [addCommentDone]);\n\n  return (\n    <Form onFinish={onSubmitComment}>\n      <Form.Item style={{ position: \"relative\", margin: 0 }}>\n        <Input.TextArea\n          value={commentText}\n          onChange={onChangeCommentText}\n          rows={4}\n        />\n        <Button\n          style={{ position: \"absolute\", right: 0, bottom: -40 }}\n          type=\"primary\"\n          htmlType=\"submit\"\n        >\n          삐약\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AACrD,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,MAAM;AAC1C,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,mBAAmB,QAAQ,kBAAkB;AAEtD,MAAMC,WAAW,GAAG,CAAC;EAAEC;AAAK,CAAC,KAAK;EAChC,MAAMC,QAAQ,GAAGL,WAAW,EAAE;EAC9B,MAAM;IAAEM;EAAe,CAAC,GAAGL,WAAW,CAAEM,KAAK,IAAKA,KAAK,CAACH,IAAI,CAAC;EAC7D,MAAM,CAACI,WAAW,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACvD,MAAMY,EAAE,GAAGT,WAAW,CAAEM,KAAK;IAAA;IAAA,yBAAKA,KAAK,CAACI,IAAI,CAACC,EAAE,mDAAb,eAAeF,EAAE;EAAA,EAAC;EAEpD,MAAMG,eAAe,GAAGpB,WAAW,CAAC,MAAM;IACxCY,QAAQ,CAAC;MACPS,IAAI,EAAEZ,mBAAmB;MACzBa,IAAI,EAAE;QAAEC,OAAO,EAAER,WAAW;QAAES,MAAM,EAAEb,IAAI,CAACM,EAAE;QAAEQ,MAAM,EAAER;MAAG;IAC5D,CAAC,CAAC;EACJ,CAAC,EAAE,CAACF,WAAW,EAAEE,EAAE,CAAC,CAAC;EAErBhB,SAAS,CAAC,MAAM;IACd,IAAGY,cAAc,EAAC;MAChBa,GAAG;IACL;EAEF,CAAC,EAAE,CAACb,cAAc,CAAC,CAAC;EAEpB,OACE,MAAC,IAAI;IAAC,QAAQ,EAAEO,eAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC9B,MAAC,IAAI,CAAC,IAAI;IAAC,KAAK,EAAE;MAAEO,QAAQ,EAAE,UAAU;MAAEC,MAAM,EAAE;IAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACpD,MAAC,KAAK,CAAC,QAAQ;IACb,KAAK,EAAEb,WAAY;IACnB,QAAQ,EAAEC,mBAAoB;IAC9B,IAAI,EAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACR,EACF,MAAC,MAAM;IACL,KAAK,EAAE;MAAEW,QAAQ,EAAE,UAAU;MAAEE,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE,CAAC;IAAG,CAAE;IACvD,IAAI,EAAC,SAAS;IACd,QAAQ,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAGV,CACC,CACP;AAEX,CAAC;AAEDpB,WAAW,CAACqB,SAAS,GAAG;EACtBpB,IAAI,EAAEL,SAAS,CAAC0B,MAAM,CAACC;AACzB,CAAC;AAED,eAAevB,WAAW"},"metadata":{},"sourceType":"module"}